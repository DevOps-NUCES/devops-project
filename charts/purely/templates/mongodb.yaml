apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: {{ .Values.namespace }}
  labels:
    app: mongodb
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:latest
        ports:
        - containerPort: {{ .Values.mongodb.port }}
          name: mongodb
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-password
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        {{- if .Values.mongodb.initData.enabled }}
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d/{{ .Values.mongodb.initData.initScript.name }}
          subPath: {{ .Values.mongodb.initData.initScript.configMapKey }}
        - name: init-data
          mountPath: /docker-entrypoint-initdb.d/{{ .Values.mongodb.initData.sampleData.products.name }}
          subPath: {{ .Values.mongodb.initData.sampleData.products.configMapKey }}
        - name: init-data
          mountPath: /docker-entrypoint-initdb.d/{{ .Values.mongodb.initData.sampleData.categories.name }}
          subPath: {{ .Values.mongodb.initData.sampleData.categories.configMapKey }}
        {{- end }}
      volumes:
      {{- if .Values.mongodb.initData.enabled }}
      - name: init-script
        configMap:
          name: mongodb-init-script
      - name: init-data
        configMap:
          name: mongodb-init-data
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.mongodb.persistence.size }}
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: {{ .Values.namespace }}
  labels:
    app: mongodb
spec:
  selector:
    app: mongodb
  ports:
  - port: {{ .Values.mongodb.port }}
    targetPort: {{ .Values.mongodb.port }}
---
{{- if .Values.mongodb.initData.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init-script
  namespace: {{ .Values.namespace }}
  labels:
    app: mongodb
data:
  {{ .Values.mongodb.initData.initScript.configMapKey }}: |-
{{ .Files.Get (printf "files/%s" .Values.mongodb.initData.initScript.name) | indent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init-data
  namespace: {{ .Values.namespace }}
  labels:
    app: mongodb
data:
  {{ .Values.mongodb.initData.sampleData.products.configMapKey }}: |-
{{ .Files.Get (printf "files/%s" .Values.mongodb.initData.sampleData.products.name) | indent 4 }}
  {{ .Values.mongodb.initData.sampleData.categories.configMapKey }}: |-
{{ .Files.Get (printf "files/%s" .Values.mongodb.initData.sampleData.categories.name) | indent 4 }}
{{- end }}
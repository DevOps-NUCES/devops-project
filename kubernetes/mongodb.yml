apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: purely
  labels:
    app: mongodb
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:latest
        ports:
        - containerPort: 27017
          name: mongodb
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-password
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: init-data
          mountPath: /docker-entrypoint-initdb.d/init-data.js
          subPath: init-data.js
        - name: init-data
          mountPath: /docker-entrypoint-initdb.d/products.json
          subPath: products.json
        - name: init-data
          mountPath: /docker-entrypoint-initdb.d/categories.json
          subPath: categories.json
      volumes:
      - name: init-data
        configMap:
          name: mongodb-init-script    

  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: purely
  labels:
    app: mongodb
spec:
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
  
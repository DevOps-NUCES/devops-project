---
- name: Initialize Kubernetes cluster on master
  hosts: masters
  become: yes
  tasks:
    - name: Check if cluster is already initialized
      stat:
        path: /etc/kubernetes/admin.conf
      register: admin_conf

    - name: Initialize cluster if not already done
      when: not admin_conf.stat.exists
      block:
        - name: Run kubeadm init and capture output
          shell: |
            kubeadm init --pod-network-cidr=10.244.0.0/16 > /tmp/init_output.txt
          args:
            creates: /tmp/init_output.txt

        - name: Extract join command from output
          shell: |
            grep 'kubeadm join' /tmp/init_output.txt | tail -2 | sed 's/\\//g' | tr -d '\n'
          register: join_command_output

        - name: Set join_command fact
          set_fact:
            join_command: "{{ join_command_output.stdout }}"
          delegate_facts: true

        - name: Set up kubectl for ubuntu user
          shell: |
            mkdir -p /home/ubuntu/.kube
            cp -i /etc/kubernetes/admin.conf /home/ubuntu/.kube/config
            chown ubuntu:ubuntu /home/ubuntu/.kube/config

        - name: Install Flannel pod network
          command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
          environment:
            KUBECONFIG: /home/ubuntu/.kube/config

- name: Share join command with all hosts
  hosts: all
  tasks:
    - name: Set join command fact on all hosts
      set_fact:
        join_command: "{{ hostvars[groups['masters'][0]]['join_command'] }}"
      when: hostvars[groups['masters'][0]]['join_command'] is defined

- name: Join worker nodes to the cluster
  hosts: workers
  become: yes
  tasks:
    - name: Check if node is already joined
      stat:
        path: /etc/kubernetes/kubelet.conf
      register: kubelet_conf

    - name: Join node if not already joined
      when: not kubelet_conf.stat.exists
      command: "{{ hostvars[groups['masters'][0]].join_command }}"